{"version":3,"sources":["app\\src\\store\\configureStore.js"],"names":[],"mappings":";;;;;kBAMwB,c;;AANxB;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,SAAS,cAAT,CAAwB,YAAxB,EAAsC;AACnD,MAAI,QAAQ,IAAZ;;AAEA,MAAG,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA5B,EAA0C;AACxC,YAAQ,4CAEN,YAFM,EAGN,gEAHM,CAAR;AAKD,GAND,MAMO;AACL,QAAI,eAAe,QAAQ,cAAR,CAAnB;AACA,QAAM,SAAS,aAAa;AAC1B,aAAO,MADmB;AAE1B,iBAAW,KAFe;AAG1B,cAAQ,OAHkB;AAI1B,iBAAW,mBAAC,QAAD,EAAW,MAAX;AAAA,eAAsB,IAAtB;AAAA;AAJe,KAAb,CAAf;;AAOA,YAAQ,4CAEN,YAFM,EAGN,iEAAgD,MAAhD,CAHM,CAAR;AAKD;;AAED,MAAI,OAAO,GAAP,IAAc,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA3C,EAAyD;AACvD;AACA,WAAO,GAAP,CAAW,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACrC,UAAM,kBAAkB,QAAQ,aAAR,CAAxB;AACA,YAAM,cAAN,CAAqB,eAArB;AACD,KAHD;AAID;;AAED,SAAO,KAAP;AACD;AArCD","file":"configureStore.js","sourceRoot":"E:/git-repository/node-server","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport apiMiddleware from '../middleware/api'\n//import createLogger from 'redux-logger'\nimport rootReducer from '../reducers'\n\nexport default function configureStore(initialState) {\n  let store = null\n\n  if(process.env.NODE_ENV === 'production') {\n    store = createStore(\n      rootReducer,\n      initialState,\n      applyMiddleware(thunkMiddleware, apiMiddleware)\n    )\n  } else {\n    let createLogger = require('redux-logger')\n    const logger = createLogger({\n      level: 'info',\n      collapsed: false,\n      logger: console,\n      predicate: (getState, action) => true\n    })\n\n    store = createStore(\n      rootReducer,\n      initialState,\n      applyMiddleware(thunkMiddleware, apiMiddleware, logger)\n    )\n  }\n\n  if (module.hot && process.env.NODE_ENV !== 'production') {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers')\n      store.replaceReducer(nextRootReducer)\n    })\n  }\n\n  return store\n}\n"]}