'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = configureStore;

var _redux = require('redux');

var _reduxThunk = require('redux-thunk');

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _middleware = require('../api/middleware');

var _middleware2 = _interopRequireDefault(_middleware);

var _reactRouterRedux = require('react-router-redux');

var _reducers = require('../reducers');

var _reducers2 = _interopRequireDefault(_reducers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function configureStore(initialState, history) {

  var middleware = [_reduxThunk2.default, _middleware2.default, (0, _reactRouterRedux.routerMiddleware)(history)];

  var finalCreateStore = void 0;

  if (process.env.NODE_ENV === 'production') {
    finalCreateStore = (0, _redux.compose)(_redux.applyMiddleware.apply(undefined, middleware));
  } else {
    var createLogger = require('redux-logger');
    var logger = createLogger({
      level: 'info',
      collapsed: false,
      logger: console,
      predicate: function predicate(getState, action) {
        return true;
      }
    });

    middleware.push(logger);

    finalCreateStore = (0, _redux.compose)(_redux.applyMiddleware.apply(undefined, middleware));
  }

  var store = finalCreateStore(_redux.createStore)(_reducers2.default, initialState);

  if (module.hot && process.env.NODE_ENV !== 'production') {
    // Enable Webpack hot module replacement for reducers
    module.hot.accept('../reducers', function () {
      var nextRootReducer = require('../reducers');
      store.replaceReducer(nextRootReducer);
    });
  }

  return store;
}

// export default function configureStore(initialState) {
//   let store = null

//   if(process.env.NODE_ENV === 'production') {
//     store = createStore(
//       rootReducer,
//       initialState,
//       applyMiddleware(thunkMiddleware, apiMiddleware)
//     )
//   } else {
//     let createLogger = require('redux-logger')
//     const logger = createLogger({
//       level: 'info',
//       collapsed: false,
//       logger: console,
//       predicate: (getState, action) => true
//     })

//     store = createStore(
//       rootReducer,
//       initialState,
//       applyMiddleware(thunkMiddleware, apiMiddleware, logger)
//     )
//   }

//   if (module.hot && process.env.NODE_ENV !== 'production') {
//     // Enable Webpack hot module replacement for reducers
//     module.hot.accept('../reducers', () => {
//       const nextRootReducer = require('../reducers')
//       store.replaceReducer(nextRootReducer)
//     })
//   }

//   return store
// }

//import createLogger from 'redux-logger'