'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _authUtil = require('../util/authUtil');

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

var _requestURL = require('../constants/requestURL');

var _requestURL2 = _interopRequireDefault(_requestURL);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('es6-promise').polyfill();
var API_BASE_URL = _config2.default.API_BASE_URL;
var LOGIN_URL = _requestURL2.default.LOGIN_URL;
var LOAD_USER_URL = _requestURL2.default.LOAD_USER_URL;
var LOAD_NEWSLIST_URL = _requestURL2.default.LOAD_NEWSLIST_URL;
var LOAD_NEWS_DETAIL_URL = _requestURL2.default.LOAD_NEWS_DETAIL_URL;

//axios.defaults.baseURL = API_BASE_URL

_axios2.default.defaults.withCredentials = true;

// Add a request interceptor
_axios2.default.interceptors.request.use(function (config) {
  config.headers = config.headers || {};
  if ((0, _authUtil.getCookie)('token')) {
    config.headers.Authorization = 'hyoa ' + (0, _authUtil.getCookie)('token').replace(/(^\")|(\"$)/g, '');
  }
  return config;
}, function (error) {
  return Promise.reject(error);
});

// Add a response interceptor
_axios2.default.interceptors.response.use(function (response) {
  // Do something with response data
  if (response.status === 401) {
    (0, _authUtil.signOut)();
    window.location.pathname = '/login';
  }
  return response;
}, function (error) {
  // Do something with response error
  return Promise.reject(error);
});

/**
 * 使用axios调用后台接口，所有请求的方法暂时都放这里
 * @autor baizn
 */
exports.default = {

  /**
   * 验证时候，通过用户名和密码查询数据库中是否有相应的数据
   * @param {object} 登录用户名和密码的对象
   * @returns 查询结果
   */
  localLogin: function localLogin(data) {
    debugger;
    return _axios2.default.post(LOGIN_URL, data);
  },

  /**
   * 使用token查询用户信息
   * @param {string} token 登录后存在cookie中的token信息
   * @returns promise对象，调用then方法后，获取查询到的数据
   */
  getUserInfo: function getUserInfo(token) {
    return _axios2.default.get(LOAD_USER_URL + '/' + token, {
      headers: {
        Authorization: 'hyoa ' + token
      }
    });
  },

  /**
   * 查询所有公告，暂时不分页
   * @param {}
   * @returns promise对象，调用then方法后，获取查询到的数据
   */
  getNewsList: function getNewsList(data) {
    return _axios2.default.get(LOAD_NEWSLIST_URL, data);
  },

  /**
   * 使用公告ID查询公告内容
   * @param {string} id 公告ID
   * @returns promise对象，调用then方法后，获取查询到的数据
   */
  getNewsDetail: function getNewsDetail(id) {
    return _axios2.default.get(LOAD_NEWS_DETAIL_URL + '/' + id);
  }
};